/*{
  "author": "Glenn M. Lewis",
  "copyright": "Apache-2.0",
  "date": "2019-06-30",
  "irmf": "1.0",
  "materials": ["PLA1","PLA2"],
  "max": [7,5,5],
  "min": [-5,-5,-5],
  "notes": "Partial sphere function.",
  "options": {},
  "title": "Two Sphere Slices",
  "units": "mm",
  "version": "1.0"
}*/

#define M_PI 3.1415926535897932384626433832795

float sphere(in float radius, float fromDeg, float toDeg, in vec3 xyz) {
  float r = length(xyz);
  if (r > radius) { return 0.0; }
  
  float angleDeg = mod(360.0 + atan(xyz.y, xyz.x) * 180.0 / M_PI, 360.0);
  if (fromDeg < toDeg &&(angleDeg < fromDeg || angleDeg > toDeg)) { return 0.0; }
  if (fromDeg > toDeg && angleDeg < fromDeg && angleDeg > toDeg) { return 0.0; }
  
  return 1.0;
}

void mainModel4(out vec4 materials, in vec3 xyz) {
  const float radius = 5.0;
  materials[0] = sphere(radius, 45.0, 315.0, xyz);
  materials[1] = sphere(radius, 315.0, 45.0, xyz - vec3(2, 0, 0));
}
